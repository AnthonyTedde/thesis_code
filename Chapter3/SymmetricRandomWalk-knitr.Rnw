\documentclass{article}
\usepackage{amsmath, amssymb}

\begin{document}
%\SweaveOpts{concordance=TRUE}

<<echo=FALSE>>=
# Use extrafonts package (especially for ggplot)
library(extrafont)
font_install('fontcm')
# font_import()
#loadfonts()
# 
# font_install('fontcm')
# fonts() -> return all available fonts
library(ggplot2)
library(xtable)
library(plyr)
library(dplyr)
@


\section{Description}
The symetric random walk will be described in this document (Mt). it covers the theory of "Stochastic Calculus for finance" Tome 2 chapter 3 section 1.

The construction of the random walk depend on the evolution of a random variable $X_i$. The previous RV can take two value at each time, like tossing a coin. $X_i$ can take the value 1 or -1.

\begin{equation}
 \label{eq:Xi}
X_i = 
\left \{{
  \begin{array}{c} 1 \\ -1 \end{array}
  }\right .
\end{equation}
 
The Symetric Random Walk is constructed by summing up the different outcome of the random variable $X_i$ from $k$ experiments:

\begin{equation}
\label{eq:SRW}
M_k = 
\sum_{j=1}^k X_j
\end{equation}

In the following lines of code, $X_i$ is randomly difined. The variable $k$ ensure to have a sufficent number of periods to further generate the scaled random walk.
It refers to the $k$ of equation~\ref{eq:SRW}.
$p$ and $q$ are the probability measure, respectively $p$ chance to get value 1 and $q$ chance to get -1 from random variable $X_i$.

 
<<echo=FALSE>>=
p <- 0.5
q <- 1 - p
k <- 300
##
# Generation
##
X <- sample(x = c(-1, 1),
            size = k,
            replace = T,
            prob = c(p, q)
            )
@

After creating the random variable $X_i$ it suffices to add up all the differente output we get from time 1 up to $k$ to get a specific Symetric Random Walk.

The following outcome present a randomly generated 300 steps symmetric random walk.

\begin{table}[h]
<<echo=FALSE>>=
M_k <- c(0, 
         sapply(seq_along(X), function(x){sum(X[1:x])}))
# cat(M_k) 
@
\caption{300 steps Symmetric Random Walk}
\end{table}


\begin{figure}[!h]
\begin{center}

<<echo=FALSE, out.width='100%', message=F, warning=F>>=
# 
# Change the vector Mk to dataframe with 
#   Column1: Time period [0, T]
#   Column2: Outcome of the Symmetric Random Walk at that time.
 df_Mk <- as.data.frame(
  cbind(
  seq_along(M_k) - 1,
  M_k
))
colnames(df_Mk) <- c('x', 'y')

# Plot
ggplot(data = df_Mk, aes(x, y)) + 
  geom_line() +
  xlab("Time") + ylab("SRW") +
  theme_minimal() + 
  theme(text = element_text(family="CM Roman"),
        axis.title = element_text(face = "plain"))
@


\end{center}
\caption{Symmetric Random Walk}
\end{figure}

<<results='asis'>>=
# Because squared matrix dim(y) = dim(x):
dim_x <- dim_y <- 1:(k + 1) # from 1 to k+1 because we start to time zero nonrandom which equal to zero
o <- outer(dim_x, dim_y, FUN=function(r,c){(r-c) + (1-c)} )
to <- t(o)
subset <- upper.tri(to, diag = T)
Mk <- to * subset
colnames(Mk) <- paste0("F(", 1:ncol(Mk) - 1, ")")
# Transform Mk to better suit the table:
Mk_print <- apply(Mk, 2, as.character)
# Create the Tex Table > tabular
Mk.tab <- xtable(Mk_print[1:10, 1:10], digits = 0, format = "latex")
align(Mk.tab) <- rep("r", 11)
Mk.tab
@

<<>>=
# compute the probability measure to apply on the Random Variable Mk
fi <- outer(dim_x,
            dim_y,
            FUN = function(i, j){choose((j-1), (j-i)) * p^(j-1)})
@

<<>>=
 range <- 1:ncol(Mk)
lastToss <- ncol(Mk)
 # Using ggplot
# data.frame which map distribution and random variable:
distributionSymRanWal <- data.frame(
  Value = Mk[range, lastToss],
  Frequency = fi[range, lastToss]
)

# For the sake of visibility the limit of X axis has been set to [-100, 100]
ggplot(data = distributionSymRanWal, aes(Value, Frequency)) +
  geom_line() +
  scale_x_continuous(limits = c(-100, 100)) +
   theme_minimal() + 
  theme(text = element_text(family="CM Roman"),
        axis.title = element_text(face = "plain"))
@


\section{Martingale property}

\begin{equation}
\mathop{\mathbb{E}}[X] = \sum_{i=1}^N p_i \times x_i
\end{equation}

To show the martingale property we have to show that the expectation of the symmetric random walk $\mathop{\mathbb{E}}[X|F(0)] = M_0 = 0$

<<>>=
 EM200 = sum(Mk[1:200, 200] * fi[1:200, 200]) # equal zero.
@




 
           
\end{document}
